apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'boommenu'

    publishedGroupId = 'com.nightonke'
    libraryName = 'boommenu'
    artifact = 'boommenu'

    libraryDescription = 'A menu which can ... BOOM!'

    siteUrl = 'https://github.com/Nightonke/BoomMenu'
    gitUrl = 'https://github.com/Nightonke/BoomMenu.git'

    libraryVersion = '2.1.1'

    developerId = 'nightonke'
    developerName = 'Weiping Huang'
    developerEmail = 'nightonke@outlook.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 2110
        versionName "2.1.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

// usage:
// ./gradlew clean publish
// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
//                url = layout.buildDirectory.dir('repo')
                println("Publish to file:${System.getenv('CUSTOM_LOCAL_MAVEN')}")
                url = "file:${System.getenv('CUSTOM_LOCAL_MAVEN')}"
            }
        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = publishedGroupId
                artifactId = artifact
                version = libraryVersion
            }
//            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.example.MyLibrary'
//                artifactId = 'final-debug'
//                version = '1.0'
//            }
        }
    }
}
